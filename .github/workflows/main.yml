name: deploy

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Copy files via rsync
        run: |
          rsync -avz --delete \
            --exclude='.git*' \
            --include='docker-compose.yml' \
            --include='Dockerfile' \
            --include='requirements.txt' \
            --include='app/***' \
            --exclude='*' \
            --exclude='.env' \
            -e "ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no" \
            ./ ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}:/var/app/


      - name: Restart app
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd /var/app && \
            if command -v docker-compose >/dev/null 2>&1; then \
              docker-compose down && \
              docker-compose up -d --build; \
            else \
              docker compose down && \
              docker compose up -d --build; \
            fi && \
            docker image prune -f
          '


      - name: Smoke test API
        run: |
          ssh -p ${{ secrets.SSH_PORT }} -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            MAX_RETRIES=4
            COUNT=0
            until curl -sf http://localhost:8080/health; do                COUNT=$((COUNT+1))
              if [ $COUNT -ge $MAX_RETRIES ]; then
                echo "Smoke test failed: API did not respond in time"
                exit 1
              fi
              echo "Waiting for API to be ready... ($COUNT/$MAX_RETRIES)"
              sleep 5
            done
            echo "Smoke test passed"
          EOF
